import { GoogleGenAI } from "@google/genai";
import { AspectRatio } from '../types';

export const generateImage = async (prompt: string, aspectRatio: AspectRatio, apiKey: string): Promise<string> => {
  if (!apiKey) {
    throw new Error("Google AI API Key is required.");
  }

  try {
    const ai = new GoogleGenAI({ apiKey });
    const response = await ai.models.generateImages({
        model: 'imagen-4.0-generate-001',
        prompt: prompt,
        config: {
          numberOfImages: 1,
          outputMimeType: 'image/jpeg',
          aspectRatio: aspectRatio,
        },
    });

    if (response.generatedImages && response.generatedImages.length > 0) {
      const base64ImageBytes: string = response.generatedImages[0].image.imageBytes;
      return `data:image/jpeg;base64,${base64ImageBytes}`;
    } else {
      throw new Error("No image was generated by the API.");
    }
  } catch (error) {
    console.error("Error generating image:", error);
    if (error instanceof Error) {
        if (error.message.includes('API key not valid')) {
             throw new Error(`Your API key is not valid. Please check it and try again.`);
        }
        throw new Error(`Failed to generate image for prompt "${prompt}": ${error.message}`);
    }
    throw new Error(`An unknown error occurred while generating image for prompt "${prompt}"`);
  }
};